{"version":3,"sources":["views/Login/scss/login.module.css","views/Login/index.jsx"],"names":["module","exports","Login","inject","observer","state","username","password","this","className","loginStyle","layout","Item","prefix","type","style","color","placeholder","value","onChange","e","setState","target","htmlType","onClick","handleSubmit","replace","props","history","error","user","userInfo_action","userName","userPwd","getUserInfo","success","Component"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,YAAY,yBAAyB,MAAQ,qBAAqB,KAAO,oBAAoB,YAAY,2B,2PCMrHC,EAFLC,YAAO,O,GACPC,Y,6MAEGC,MAAQ,CACJC,SAAU,GACVC,SAAU,I,wEAEJ,IAAD,SACqBC,KAAKH,MAA1BE,EADA,EACAA,SAASD,EADT,EACSA,SACd,OACI,yBAAKG,UAAWC,IAAW,cACvB,uBAAMC,OAAO,WAAWF,UAAWC,IAAU,OACzC,sBAAME,KAAN,CAAWH,UAAWC,IAAU,MAC5B,uBAAGD,UAAU,QAAb,4BACA,yBAAKA,UAAWC,IAAW,cACvB,uBACIG,OAAQ,uBAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAC1CC,YAAY,iCACZC,MAAOZ,EACPa,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAEf,SAAUc,EAAEE,OAAOJ,aAKhE,sBAAMN,KAAN,KACI,uBAAGH,UAAU,QAAb,gBACA,yBAAKA,UAAWC,IAAW,cACvB,uBACIG,OAAQ,uBAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAC1CF,KAAK,WACLG,YAAY,2BACZC,MAAOX,EACPY,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAEd,SAAUa,EAAEE,OAAOJ,aAIhE,sBAAMN,KAAN,KACI,uBAAQE,KAAK,UAAUS,SAAS,SAASC,QAAS,kBAAM,EAAKC,iBAA7D,qB,8JAUajB,KAAKH,MAA5BE,E,EAAAA,SAAUD,E,EAAAA,SACCoB,EAAclB,KAAKmB,MAA9BC,QAAWF,QACA,KAAbnB,GAAgC,KAAbD,E,uBACnB,IAAQuB,MAAM,qD,0CAIdrB,KAAKmB,MAAMG,KAAKC,gBAAgB,CAACC,SAAS1B,EAAS2B,QAAQ1B,I,OACjD2B,gBAEd,IAAQC,QAAQ,4BAChBT,EAAQ,e,yGAxDIU,e,MA8DLlC","file":"static/js/32.e039da4c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login-box\":\"login_login-box__O8C2x\",\"login\":\"login_login__2S6k3\",\"item\":\"login_item__1piun\",\"login-ipt\":\"login_login-ipt__1OZXA\"};","import React, { Component } from 'react'\r\nimport { Form, Icon, Input, Button, message } from \"antd\"\r\nimport loginStyle from \"./scss/login.module.css\"\r\nimport { getUserInfo } from \"@/utils/userInfo\"\r\nimport {observer,inject} from \"mobx-react\";\r\n@inject(\"user\")\r\n@observer\r\nclass Login extends Component {\r\n    state = {\r\n        username: \"\",\r\n        password: \"\"\r\n    }\r\n    render() {\r\n        let {password,username} = this.state;\r\n        return (\r\n            <div className={loginStyle['login-box']}>\r\n                <Form layout=\"vertical\" className={loginStyle['login']} >\r\n                    <Form.Item className={loginStyle['item']}>\r\n                        <p className=\"text\">用户名：</p>\r\n                        <div className={loginStyle['login-ipt']}>\r\n                            <Input\r\n                                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                placeholder=\"输入用户名\"\r\n                                value={username}\r\n                                onChange={(e) => this.setState({ username: e.target.value })}\r\n                            />\r\n                        </div>  \r\n                        \r\n                    </Form.Item>\r\n                    <Form.Item >\r\n                        <p className=\"text\">密码</p>\r\n                        <div className={loginStyle['login-ipt']}>\r\n                            <Input\r\n                                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                type=\"password\"\r\n                                placeholder=\"输入密码\"\r\n                                value={password}\r\n                                onChange={(e) => this.setState({ password: e.target.value })}\r\n                            />\r\n                        </div>\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={() => this.handleSubmit()}>\r\n                            登录\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n    // 点击登录按钮\r\n    async handleSubmit() {\r\n        let { password, username } = this.state;\r\n        let { history: { replace } } = this.props;\r\n        if (password === \"\" && username === \"\") {\r\n            message.error(\"请输入用户名/密码\")\r\n            return;\r\n        }\r\n       \r\n      await this.props.user.userInfo_action({userName:username,userPwd:password})\r\n       let userInfo = getUserInfo();\r\n      if(userInfo){\r\n        message.success(\"登录成功\")\r\n        replace(\"/main/home\")\r\n      }\r\n  \r\n    }\r\n}\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}